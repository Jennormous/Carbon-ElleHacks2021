[{"/Users/jennormous/Desktop/carbon/client/src/reportWebVitals.js":"1","/Users/jennormous/Desktop/carbon/client/src/App.js":"2","/Users/jennormous/Desktop/carbon/client/src/index.js":"3","/Users/jennormous/Desktop/carbon/client/src/components/Header.js":"4","/Users/jennormous/Desktop/carbon/client/src/components/Homepage.js":"5","/Users/jennormous/Desktop/carbon/client/src/components/Recipes.js":"6","/Users/jennormous/Desktop/carbon/client/src/components/InventoryList.js":"7"},{"size":362,"mtime":1610836985659,"results":"8","hashOfConfig":"9"},{"size":630,"mtime":1610877881268,"results":"10","hashOfConfig":"9"},{"size":550,"mtime":1610876161994,"results":"11","hashOfConfig":"9"},{"size":133,"mtime":1610884950804,"results":"12","hashOfConfig":"9"},{"size":921,"mtime":1610884957732,"results":"13","hashOfConfig":"9"},{"size":2743,"mtime":1610867678965,"results":"14","hashOfConfig":"9"},{"size":2870,"mtime":1610881221290,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"23gz0h",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/jennormous/Desktop/carbon/client/src/reportWebVitals.js",[],"/Users/jennormous/Desktop/carbon/client/src/App.js",[],"/Users/jennormous/Desktop/carbon/client/src/index.js",[],"/Users/jennormous/Desktop/carbon/client/src/components/Header.js",["32"],"/Users/jennormous/Desktop/carbon/client/src/components/Homepage.js",["33"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/img/carbonLogo.png\";\n\nexport default class Homepage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div id='homepage'>\n\t\t\t\t<div id='header'>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<h2>Welcome to</h2>\n\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t<img id='main-logo' src={logo} />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<h2>No Food Wasted</h2>\n\t\t\t\t\t</header>\n\n\t\t\t\t\t<p>\n\t\t\t\t\t\tQuickly find recipes to use the <br /> ingredients you already have\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class='button-div'>\n\t\t\t\t\t<Link class='button button1 link' to='/'>\n\t\t\t\t\t\tCreate a Meal Plan\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\n\t\t\t\t<div class='button-div'>\n\t\t\t\t\t<Link class='button button2 link' to='/grocery'>\n\t\t\t\t\t\tUse Previous Lists\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\n\t\t\t\t<div class='button-div'>\n\t\t\t\t\t<Link class='button button3 link' to='/recipe'>\n\t\t\t\t\t\tFind a Recipe\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/Users/jennormous/Desktop/carbon/client/src/components/Recipes.js",["34","35"],"/Users/jennormous/Desktop/carbon/client/src/components/InventoryList.js",["36","37","38"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Storage({ item, date, id, deleteItem }) {\n\tconst [value, setValue] = useState([]);\n\n\tconst removeItem = (event) => {\n\t\tevent.preventDefault();\n\t\taxios\n\t\t\t.delete(`http://localhost:5000/grocery/${id}`, {\n\t\t\t\tid: event.target.id.value\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetValue(res.data);\n\t\t\t\tdeleteItem();\n\t\t\t});\n\t\tconsole.log(\"it deleted\");\n\t};\n\n\tlet newDate = new Date(date * 1000);\n\tlet dateConvert = `${newDate.getMonth() +\n\t\t1}/${newDate.getDate()}/${newDate.getFullYear()}`;\n\n\treturn (\n\t\t<section className='row' id={id}>\n\t\t\t<div className='col s5'>\n\t\t\t\t<div>\n\t\t\t\t\t<p className=''>Ingredient</p>\n\t\t\t\t\t<p>{item}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* <div className='col s5'>\n        <div>\n          <p>Expiration Date</p>\n          <p>{dateConvert}</p>\n        </div>\n      </div> */}\n\t\t\t<button\n\t\t\t\tclassName=' col s2 waves-effect waves-light btn secondary'\n\t\t\t\tid={id}\n\t\t\t\tonClick={removeItem}>\n\t\t\t\tRemove\n\t\t\t</button>\n\t\t</section>\n\t);\n}\n\nfunction AddNew({ addNew, value, onChange }) {\n\tconst [item, setItems] = useState([]);\n\tconst grocery = `http://localhost:5000/grocery`;\n\n\tconst newItem = (event) => {\n\t\tevent.preventDefault();\n\t\taxios\n\t\t\t.post(grocery, {\n\t\t\t\titem: event.target.item.value\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetItems(res.data);\n\t\t\t\taddNew();\n\t\t\t});\n\t\tevent.target.reset();\n\t};\n\n\tuseEffect(() => {}, []);\n\n\treturn (\n\t\t<div className='row valign-wrapper'>\n\t\t\t<form className='col s12' onSubmit={newItem}>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='input-field col s10'>\n\t\t\t\t\t\t<label className='active' for='last_name'>\n\t\t\t\t\t\t\tIngredient\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='last_name'\n\t\t\t\t\t\t\tname='item'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Grocery Item'></input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* <div className='col s10'>\n            <label className='active' for='first_name'>\n              Expiration Date\n            </label>\n            <input type='date' name='date' id='first_name'></input>\n          </div> */}\n\t\t\t\t\t<div className='align-wrapper col s10'>\n\t\t\t\t\t\t<button className='waves-effect waves-light btn primary'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default function Inventory({ addNew }) {\n\t//set state\n\tconst [inv, setInv] = useState([]);\n\n\t// did mount\n\tuseEffect(() => {\n\t\tinvItems();\n\t}, []);\n\n\t// get all data from shopping list model\n\tconst invItems = () => {\n\t\taxios.get(`http://localhost:5000/grocery`).then((res) => {\n\t\t\tconsole.log(res.data);\n\t\t\tsetInv(res.data);\n\t\t});\n\t};\n\n\treturn (\n\t\t<section className='container'>\n\t\t\t<h3 className=''>Inventory</h3>\n\t\t\t<AddNew addNew={invItems} />\n\t\t\t<div className='container'>\n\t\t\t\t{inv.map((inv) => (\n\t\t\t\t\t<Storage\n\t\t\t\t\t\tid={inv._id}\n\t\t\t\t\t\titem={inv.item}\n\t\t\t\t\t\tdate={inv.dateExpire}\n\t\t\t\t\t\tdeleteItem={invItems}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n",{"ruleId":"39","severity":1,"message":"40","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":13,"column":8,"nodeType":"45","endLine":13,"endColumn":41},{"ruleId":"43","severity":1,"message":"44","line":15,"column":11,"nodeType":"45","endLine":15,"endColumn":28},{"ruleId":"46","severity":1,"message":"47","line":53,"column":6,"nodeType":"48","endLine":53,"endColumn":8,"suggestions":"49"},{"ruleId":"39","severity":1,"message":"50","line":5,"column":9,"nodeType":"41","messageId":"42","endLine":5,"endColumn":14},{"ruleId":"39","severity":1,"message":"51","line":21,"column":6,"nodeType":"41","messageId":"42","endLine":21,"endColumn":17},{"ruleId":"39","severity":1,"message":"52","line":49,"column":9,"nodeType":"41","messageId":"42","endLine":49,"endColumn":13},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'expiring'. Either include it or remove the dependency array.","ArrayExpression",["53"],"'value' is assigned a value but never used.","'dateConvert' is assigned a value but never used.","'item' is assigned a value but never used.",{"desc":"54","fix":"55"},"Update the dependencies array to be: [expiring]",{"range":"56","text":"57"},[1668,1670],"[expiring]"]